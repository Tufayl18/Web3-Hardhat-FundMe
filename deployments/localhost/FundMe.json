{
  "address": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "s_priceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "FundMe__NotOwner",
      "type": "error"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "MIN_USD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "cheaperWithDraw",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "funder",
          "type": "address"
        }
      ],
      "name": "getAddressToAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getFunder",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPriceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0xaa6da8a858ec65ba0384ea21beb86ea54862513e8b6b3fcebf4037a6be3c8d3c",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
    "transactionIndex": 0,
    "gasUsed": "1037099",
    "logsBloom": "0x
    "blockHash": "0x351e39ae571ab26dad3df599f31fbd3ee829e010886675ab322da6683c50ab06",
    "transactionHash": "0xaa6da8a858ec65ba0384ea21beb86ea54862513e8b6b3fcebf4037a6be3c8d3c",
    "logs": [],
    "blockNumber": 2,
    "cumulativeGasUsed": "1037099",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x5FbDB2315678afecb367f032d93F642f64180aa3"
  ],
  "numDeployments": 1,
  "solcInputHash": "bc777e9a4d746e92bcf62454617fa6bd",
  "metadata": "{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"s_priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"FundMe__NotOwner\",\"type\":\"error\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"MIN_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cheaperWithDraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"funder\",\"type\":\"address\"}],\"name\":\"getAddressToAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getFunder\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPriceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\n// solhint-disable-next-line interface-starts-with-i\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(\\n    uint80 _roundId\\n  ) external view returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\\n}\\n\",\"keccak256\":\"0x257a8d28fa83d3d942547c8e129ef465e4b5f3f31171e7be4739a4c98da6b4f0\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// Get funds from users\\n// Withdraw funds\\n// Set a minimum funding value in usd\\n\\n// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.8;\\n\\nimport \\\"./PriceConverter.sol\\\";\\n\\n//968264 gas\\n\\nerror FundMe__NotOwner();\\n\\ncontract FundMe {\\n    //Type Declarations\\n    using PriceConverter for uint256;\\n\\n    //State Variables\\n    uint256 public constant MIN_USD = 50 * 1e18;\\n\\n    address[] private s_funders;\\n    mapping(address => uint256) private s_addressToAmount;\\n\\n    address private immutable i_owner;\\n\\n    AggregatorV3Interface private s_priceFeed;\\n\\n    modifier onlyOwner() {\\n        //require(msg.sender == i_owner, \\\"Sender is not owner\\\");\\n        if (msg.sender != i_owner) {\\n            revert FundMe__NotOwner();\\n        }\\n        _;\\n    }\\n\\n    constructor(address s_priceFeedAddress) {\\n        i_owner = msg.sender;\\n        s_priceFeed = AggregatorV3Interface(s_priceFeedAddress);\\n    }\\n\\n    receive() external payable {\\n        fund();\\n    }\\n\\n    fallback() external payable {\\n        fund();\\n    }\\n\\n    function fund() public payable {\\n        // Want to set minimum amount in USD\\n        //\\n        require(\\n            msg.value.getConversionRate(s_priceFeed) >= MIN_USD,\\n            \\\"Not enough ether\\\"\\n        ); // 1e18 == 1*10*18 = 1000000000000000000\\n        s_funders.push(msg.sender);\\n        s_addressToAmount[msg.sender] += msg.value;\\n    }\\n\\n    function withdraw() public onlyOwner {\\n        for (\\n            uint256 funderIndex = 0;\\n            funderIndex < s_funders.length;\\n            funderIndex++\\n        ) {\\n            address funder = s_funders[funderIndex];\\n            s_addressToAmount[funder] = 0;\\n        }\\n        //reset array\\n        s_funders = new address[](0);\\n        //withdraw funds\\n\\n        //call //recommended\\n        (bool callSuccess, ) = payable(msg.sender).call{\\n            value: address(this).balance\\n        }(\\\"\\\");\\n        require(callSuccess, \\\"Call failed\\\");\\n    }\\n\\n    function cheaperWithDraw() public payable onlyOwner {\\n        address[] memory funders = s_funders;\\n        //mappings can't be in memory\\n        for (\\n            uint256 funderIndex = 0;\\n            funderIndex < funders.length;\\n            funderIndex++\\n        ) {\\n            address funder = funders[funderIndex];\\n            s_addressToAmount[funder] = 0;\\n        }\\n        s_funders = new address[](0);\\n\\n        (bool success, ) = i_owner.call{value: address(this).balance}(\\\"\\\");\\n        require(success);\\n    }\\n\\n    //view, pure\\n\\n    function getOwner() public view returns (address) {\\n        return i_owner;\\n    }\\n\\n    function getFunder(uint256 index) public view returns (address) {\\n        return s_funders[index];\\n    }\\n\\n    function getAddressToAmount(address funder) public view returns (uint256) {\\n        return s_addressToAmount[funder];\\n    }\\n\\n    function getPriceFeed() public view returns (AggregatorV3Interface) {\\n        return s_priceFeed;\\n    }\\n}\\n\",\"keccak256\":\"0x7a12a45f8b38a03b9973b8e8fac68d7e584497f08bdac7f143420c536435db21\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol\\\";\\n\\nlibrary PriceConverter {\\n    function getPrice(\\n        AggregatorV3Interface pricefeed\\n    ) internal view returns (uint256) {\\n        (, int256 answer, , , ) = pricefeed.latestRoundData();\\n        // Eth in USD\\n        // 3267.00000000\\n        return uint256(answer * 1e10);\\n    }\\n\\n    // function getVersion(\\n    //     AggregatorV3Interface pricefeed\\n    // ) internal view returns (uint256) {\\n    //     return pricefeed.version();\\n    // }\\n\\n    function getConversionRate(\\n        uint256 ethAmount,\\n        AggregatorV3Interface priceFeed\\n    ) internal view returns (uint256) {\\n        uint256 ethPrice = getPrice(priceFeed);\\n        uint256 ethAmtInUSD = (ethPrice * ethAmount) / 1e18;\\n        return ethAmtInUSD;\\n    }\\n}\\n\",\"keccak256\":\"0xa0ea5d9f358f70d141307b0e4f5ae259eee9866a29eed505fc641ad4792981b3\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a06040523480156200001157600080fd5b50604051620012ea380380620012ea833981810160405281019062000037919062000120565b3373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b8152505080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505062000152565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000e882620000bb565b9050919050565b620000fa81620000db565b81146200010657600080fd5b50565b6000815190506200011a81620000ef565b92915050565b600060208284031215620001395762000138620000b6565b5b6000620001498482850162000109565b91505092915050565b60805160601c6111646200018660003960008181610308015281816105480152818161073e01526107d801526111646000f3fe60806040526004361061007f5760003560e01c80639e87a5cd1161004e5780639e87a5cd1461010f578063b60d42881461013a578063c0f8cffc14610144578063d7b4750c146101815761008e565b8063213dbea2146100985780633ccfd60b146100c3578063599b4619146100da578063893d20e8146100e45761008e565b3661008e5761008c6101be565b005b6100966101be565b005b3480156100a457600080fd5b506100ad6102f9565b6040516100ba9190610a52565b60405180910390f35b3480156100cf57600080fd5b506100d8610306565b005b6100e2610546565b005b3480156100f057600080fd5b506100f96107d4565b6040516101069190610aae565b60405180910390f35b34801561011b57600080fd5b506101246107fc565b6040516101319190610b28565b60405180910390f35b6101426101be565b005b34801561015057600080fd5b5061016b60048036038101906101669190610b74565b610826565b6040516101789190610a52565b60405180910390f35b34801561018d57600080fd5b506101a860048036038101906101a39190610bcd565b61086f565b6040516101b59190610aae565b60405180910390f35b6802b5e3af16b18800006101fd600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346108b690919063ffffffff16565b101561023e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161023590610c57565b60405180910390fd5b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546102f09190610ca6565b92505081905550565b6802b5e3af16b188000081565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461038b576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6000805490508110156104365760008082815481106103b0576103af610cfc565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061042e90610d2b565b91505061038e565b50600067ffffffffffffffff81111561045257610451610d74565b5b6040519080825280602002602001820160405280156104805781602001602082028036833780820191505090505b5060009080519060200190610496929190610992565b5060003373ffffffffffffffffffffffffffffffffffffffff16476040516104bd90610dd4565b60006040518083038185875af1925050503d80600081146104fa576040519150601f19603f3d011682016040523d82523d6000602084013e6104ff565b606091505b5050905080610543576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161053a90610e35565b60405180910390fd5b50565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146105cb576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008080548060200260200160405190810160405280929190818152602001828054801561064e57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610604575b5050505050905060005b81518110156106d957600082828151811061067657610675610cfc565b5b602002602001015190506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806106d190610d2b565b915050610658565b50600067ffffffffffffffff8111156106f5576106f4610d74565b5b6040519080825280602002602001820160405280156107235781602001602082028036833780820191505090505b5060009080519060200190610739929190610992565b5060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff164760405161078090610dd4565b60006040518083038185875af1925050503d80600081146107bd576040519150601f19603f3d011682016040523d82523d6000602084013e6107c2565b606091505b50509050806107d057600080fd5b5050565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600080828154811061088457610883610cfc565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000806108c2836108f2565b90506000670de0b6b3a764000085836108db9190610e55565b6108e59190610ede565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561093b57600080fd5b505afa15801561094f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109739190610f9c565b5050509150506402540be4008161098a9190611017565b915050919050565b828054828255906000526020600020908101928215610a0b579160200282015b82811115610a0a5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906109b2565b5b509050610a189190610a1c565b5090565b5b80821115610a35576000816000905550600101610a1d565b5090565b6000819050919050565b610a4c81610a39565b82525050565b6000602082019050610a676000830184610a43565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610a9882610a6d565b9050919050565b610aa881610a8d565b82525050565b6000602082019050610ac36000830184610a9f565b92915050565b6000819050919050565b6000610aee610ae9610ae484610a6d565b610ac9565b610a6d565b9050919050565b6000610b0082610ad3565b9050919050565b6000610b1282610af5565b9050919050565b610b2281610b07565b82525050565b6000602082019050610b3d6000830184610b19565b92915050565b600080fd5b610b5181610a8d565b8114610b5c57600080fd5b50565b600081359050610b6e81610b48565b92915050565b600060208284031215610b8a57610b89610b43565b5b6000610b9884828501610b5f565b91505092915050565b610baa81610a39565b8114610bb557600080fd5b50565b600081359050610bc781610ba1565b92915050565b600060208284031215610be357610be2610b43565b5b6000610bf184828501610bb8565b91505092915050565b600082825260208201905092915050565b7f4e6f7420656e6f75676820657468657200000000000000000000000000000000600082015250565b6000610c41601083610bfa565b9150610c4c82610c0b565b602082019050919050565b60006020820190508181036000830152610c7081610c34565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610cb182610a39565b9150610cbc83610a39565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610cf157610cf0610c77565b5b828201905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610d3682610a39565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610d6957610d68610c77565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610dbe600083610da3565b9150610dc982610dae565b600082019050919050565b6000610ddf82610db1565b9150819050919050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610e1f600b83610bfa565b9150610e2a82610de9565b602082019050919050565b60006020820190508181036000830152610e4e81610e12565b9050919050565b6000610e6082610a39565b9150610e6b83610a39565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610ea457610ea3610c77565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610ee982610a39565b9150610ef483610a39565b925082610f0457610f03610eaf565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610f2e81610f0f565b8114610f3957600080fd5b50565b600081519050610f4b81610f25565b92915050565b6000819050919050565b610f6481610f51565b8114610f6f57600080fd5b50565b600081519050610f8181610f5b565b92915050565b600081519050610f9681610ba1565b92915050565b600080600080600060a08688031215610fb857610fb7610b43565b5b6000610fc688828901610f3c565b9550506020610fd788828901610f72565b9450506040610fe888828901610f87565b9350506060610ff988828901610f87565b925050608061100a88828901610f3c565b9150509295509295909350565b600061102282610f51565b915061102d83610f51565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048211600084136000841316161561106c5761106b610c77565b5b817f800000000000000000000000000000000000000000000000000000000000000005831260008412600084131616156110a9576110a8610c77565b5b827f800000000000000000000000000000000000000000000000000000000000000005821260008413600084121616156110e6576110e5610c77565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff058212600084126000841216161561112357611122610c77565b5b82820290509291505056fea2646970667358221220c2bb057130a2e88a0191ebc6bb9a24c3932397ebbfe2dbab12899b097d212e4b64736f6c63430008080033",
  "deployedBytecode": "0x60806040526004361061007f5760003560e01c80639e87a5cd1161004e5780639e87a5cd1461010f578063b60d42881461013a578063c0f8cffc14610144578063d7b4750c146101815761008e565b8063213dbea2146100985780633ccfd60b146100c3578063599b4619146100da578063893d20e8146100e45761008e565b3661008e5761008c6101be565b005b6100966101be565b005b3480156100a457600080fd5b506100ad6102f9565b6040516100ba9190610a52565b60405180910390f35b3480156100cf57600080fd5b506100d8610306565b005b6100e2610546565b005b3480156100f057600080fd5b506100f96107d4565b6040516101069190610aae565b60405180910390f35b34801561011b57600080fd5b506101246107fc565b6040516101319190610b28565b60405180910390f35b6101426101be565b005b34801561015057600080fd5b5061016b60048036038101906101669190610b74565b610826565b6040516101789190610a52565b60405180910390f35b34801561018d57600080fd5b506101a860048036038101906101a39190610bcd565b61086f565b6040516101b59190610aae565b60405180910390f35b6802b5e3af16b18800006101fd600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346108b690919063ffffffff16565b101561023e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161023590610c57565b60405180910390fd5b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546102f09190610ca6565b92505081905550565b6802b5e3af16b188000081565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461038b576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6000805490508110156104365760008082815481106103b0576103af610cfc565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061042e90610d2b565b91505061038e565b50600067ffffffffffffffff81111561045257610451610d74565b5b6040519080825280602002602001820160405280156104805781602001602082028036833780820191505090505b5060009080519060200190610496929190610992565b5060003373ffffffffffffffffffffffffffffffffffffffff16476040516104bd90610dd4565b60006040518083038185875af1925050503d80600081146104fa576040519150601f19603f3d011682016040523d82523d6000602084013e6104ff565b606091505b5050905080610543576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161053a90610e35565b60405180910390fd5b50565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146105cb576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008080548060200260200160405190810160405280929190818152602001828054801561064e57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610604575b5050505050905060005b81518110156106d957600082828151811061067657610675610cfc565b5b602002602001015190506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806106d190610d2b565b915050610658565b50600067ffffffffffffffff8111156106f5576106f4610d74565b5b6040519080825280602002602001820160405280156107235781602001602082028036833780820191505090505b5060009080519060200190610739929190610992565b5060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff164760405161078090610dd4565b60006040518083038185875af1925050503d80600081146107bd576040519150601f19603f3d011682016040523d82523d6000602084013e6107c2565b606091505b50509050806107d057600080fd5b5050565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600080828154811061088457610883610cfc565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000806108c2836108f2565b90506000670de0b6b3a764000085836108db9190610e55565b6108e59190610ede565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561093b57600080fd5b505afa15801561094f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109739190610f9c565b5050509150506402540be4008161098a9190611017565b915050919050565b828054828255906000526020600020908101928215610a0b579160200282015b82811115610a0a5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906109b2565b5b509050610a189190610a1c565b5090565b5b80821115610a35576000816000905550600101610a1d565b5090565b6000819050919050565b610a4c81610a39565b82525050565b6000602082019050610a676000830184610a43565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610a9882610a6d565b9050919050565b610aa881610a8d565b82525050565b6000602082019050610ac36000830184610a9f565b92915050565b6000819050919050565b6000610aee610ae9610ae484610a6d565b610ac9565b610a6d565b9050919050565b6000610b0082610ad3565b9050919050565b6000610b1282610af5565b9050919050565b610b2281610b07565b82525050565b6000602082019050610b3d6000830184610b19565b92915050565b600080fd5b610b5181610a8d565b8114610b5c57600080fd5b50565b600081359050610b6e81610b48565b92915050565b600060208284031215610b8a57610b89610b43565b5b6000610b9884828501610b5f565b91505092915050565b610baa81610a39565b8114610bb557600080fd5b50565b600081359050610bc781610ba1565b92915050565b600060208284031215610be357610be2610b43565b5b6000610bf184828501610bb8565b91505092915050565b600082825260208201905092915050565b7f4e6f7420656e6f75676820657468657200000000000000000000000000000000600082015250565b6000610c41601083610bfa565b9150610c4c82610c0b565b602082019050919050565b60006020820190508181036000830152610c7081610c34565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610cb182610a39565b9150610cbc83610a39565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610cf157610cf0610c77565b5b828201905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610d3682610a39565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610d6957610d68610c77565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610dbe600083610da3565b9150610dc982610dae565b600082019050919050565b6000610ddf82610db1565b9150819050919050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610e1f600b83610bfa565b9150610e2a82610de9565b602082019050919050565b60006020820190508181036000830152610e4e81610e12565b9050919050565b6000610e6082610a39565b9150610e6b83610a39565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610ea457610ea3610c77565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610ee982610a39565b9150610ef483610a39565b925082610f0457610f03610eaf565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610f2e81610f0f565b8114610f3957600080fd5b50565b600081519050610f4b81610f25565b92915050565b6000819050919050565b610f6481610f51565b8114610f6f57600080fd5b50565b600081519050610f8181610f5b565b92915050565b600081519050610f9681610ba1565b92915050565b600080600080600060a08688031215610fb857610fb7610b43565b5b6000610fc688828901610f3c565b9550506020610fd788828901610f72565b9450506040610fe888828901610f87565b9350506060610ff988828901610f87565b925050608061100a88828901610f3c565b9150509295509295909350565b600061102282610f51565b915061102d83610f51565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048211600084136000841316161561106c5761106b610c77565b5b817f800000000000000000000000000000000000000000000000000000000000000005831260008412600084131616156110a9576110a8610c77565b5b827f800000000000000000000000000000000000000000000000000000000000000005821260008413600084121616156110e6576110e5610c77565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff058212600084126000841216161561112357611122610c77565b5b82820290509291505056fea2646970667358221220c2bb057130a2e88a0191ebc6bb9a24c3932397ebbfe2dbab12899b097d212e4b64736f6c63430008080033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 61,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_funders",
        "offset": 0,
        "slot": "0",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 65,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_addressToAmount",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 70,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_priceFeed",
        "offset": 0,
        "slot": "2",
        "type": "t_contract(AggregatorV3Interface)45"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}